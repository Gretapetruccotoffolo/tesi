import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sympy as sp

# === PARAMETRI BIOLOGICI ===
alpha = 0.4
c = 36259.6      # valore di c fisso
K = 168062       # valore di K fisso

# === DEFINIZIONE SIMBOLICA DEL POLINOMIO ===
R, eta = sp.symbols('R eta')
polynomial = alpha * R * (R - c) * (1 - R / K) - eta
poly_expanded = sp.expand(polynomial)

# Estrai coefficienti
a = float(poly_expanded.coeff(R, 3))
b = float(poly_expanded.coeff(R, 2))
c_coeff = float(poly_expanded.coeff(R, 1))

# === CALCOLA RADICI TEORICHE ===
eta_values = np.linspace(0, 300000, 1500)
R_root_min, R_root_mid, R_root_max = [], [], []

for eta_val in eta_values:
    coeffs = [a, b, c_coeff, -eta_val]
    roots = np.roots(coeffs)
    real_roots = sorted([np.real(r) for r in roots if np.isreal(r)])
    
    if len(real_roots) == 3:
        R_root_min.append(real_roots[0])
        R_root_mid.append(real_roots[1])
        R_root_max.append(real_roots[2])
    elif len(real_roots) == 1:
        R_root_min.append(real_roots[0])
        R_root_mid.append(np.nan)
        R_root_max.append(np.nan)
    else:
        R_root_min.append(np.nan)
        R_root_mid.append(np.nan)
        R_root_max.append(np.nan)

# === DATI OSSERVATI ===
# Carica il file CSV con almeno colonne: "Year", "eta_effettiva_tons"
df_obs = pd.read_csv("eta effettiva tons.csv")
df_obs = df_obs.dropna(subset=["eta_effettiva_tons"])

eta_obs = df_obs["eta_effettiva_tons"].values
obs_roots = []

for eta_val in eta_obs:
    coeffs = [a, b, c_coeff, -eta_val]
    roots = np.roots(coeffs)
    real_roots = sorted([np.real(r) for r in roots if np.isreal(r)])

    if len(real_roots) == 3:
        obs_roots.append(real_roots)
    elif len(real_roots) == 2:
        obs_roots.append([real_roots[0], real_roots[1], np.nan])
    elif len(real_roots) == 1:
        obs_roots.append([real_roots[0], np.nan, np.nan])
    else:
        obs_roots.append([np.nan, np.nan, np.nan])

obs_roots = np.array(obs_roots)
obs_min, obs_mid, obs_max = obs_roots[:, 0], obs_roots[:, 1], obs_roots[:, 2]

# === GRAFICO ===
plt.figure(figsize=(10, 6))
plt.plot(eta_values, R_root_min, color="red", label="Depleted")
plt.plot(eta_values, R_root_mid, color="green", label="Unstable")
plt.plot(eta_values, R_root_max, color="blue", label="Sustainable")

plt.scatter(eta_obs, obs_min, color="red", s=30, label="Observed - Min")
plt.scatter(eta_obs, obs_mid, color="green", s=30, label="Observed - Mid")
plt.scatter(eta_obs, obs_max, color="blue", s=30, label="Observed - Max")

plt.xlabel(r"$\eta_{\mathrm{eff}}$ (tons)")
plt.ylabel(r"$R_{\mathrm{eff}}$ (tons)")
plt.grid(True)
plt.legend()
plt.tight_layout()

plt.savefig("resilienza soluzioni.png", dpi=300)
plt.show()
